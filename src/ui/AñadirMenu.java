
package ui;

import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;
import clasesYAtributos.*;
import java.io.File;

/**
 *
 * @author Javier_Andres Herrera Manjarrez
 */
public class AñadirMenu extends javax.swing.JPanel {
    String nomdeplatos;
    String preciosdelosPlatos;
    String ingredi;
    int bueltas=0;
    float total=0;
    ListasYmetodos base = new ListasYmetodos();
    /**
     * Creates new form AñadirMenu
     */
    public AñadirMenu() {
        
        initComponents();

        setSize(1000, 525);
        
        SpinnerNumberModel modeloMesIngreso = new SpinnerNumberModel();
        modeloMesIngreso.setMaximum(5);
        modeloMesIngreso.setMinimum(1);
        modeloMesIngreso.setValue(1);
        cantidadDePlatos.setModel(modeloMesIngreso);
        cantidadDePlatos.setEditor(new JSpinner.DefaultEditor(cantidadDePlatos));
        
        numerodeMenu.setEditable(false);
        camNombrePlato.setEditable(false);
       ingredientes.setEditable(false);
        precioDelPlato.setEditable(false);
        
        btnFinalizar.setVisible(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cantidadDePlatos = new javax.swing.JSpinner();
        extablecerCantidad = new javax.swing.JButton();
        indicaPlatos = new javax.swing.JLabel();
        camNombrePlato = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnSalir = new javax.swing.JButton();
        cantidad = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        precioDelPlato = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        btnReiniciarYNoguardar = new javax.swing.JButton();
        btnAnadirPlatoAlmenu = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        totalPrecioMenu = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        numerodeMenu = new javax.swing.JTextField();
        btnFinalizar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ingredientes = new javax.swing.JTextArea();

        setBackground(new java.awt.Color(255, 211, 70));
        setLayout(null);

        cantidadDePlatos.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        add(cantidadDePlatos);
        cantidadDePlatos.setBounds(60, 160, 70, 30);

        extablecerCantidad.setBackground(new java.awt.Color(255, 245, 5));
        extablecerCantidad.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        extablecerCantidad.setForeground(new java.awt.Color(0, 0, 0));
        extablecerCantidad.setText("Extablecer cantidad de paltos");
        extablecerCantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                extablecerCantidadActionPerformed(evt);
            }
        });
        add(extablecerCantidad);
        extablecerCantidad.setBounds(60, 200, 207, 26);

        indicaPlatos.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        indicaPlatos.setForeground(new java.awt.Color(0, 0, 0));
        indicaPlatos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        indicaPlatos.setText("Maximo de platos");
        add(indicaPlatos);
        indicaPlatos.setBounds(60, 120, 200, 40);

        camNombrePlato.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        camNombrePlato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                camNombrePlatoActionPerformed(evt);
            }
        });
        camNombrePlato.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                camNombrePlatoKeyTyped(evt);
            }
        });
        add(camNombrePlato);
        camNombrePlato.setBounds(610, 60, 210, 40);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Precio del plato");
        add(jLabel2);
        jLabel2.setBounds(460, 110, 140, 25);

        btnSalir.setBackground(new java.awt.Color(154, 0, 4));
        btnSalir.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnSalir.setForeground(new java.awt.Color(0, 0, 0));
        btnSalir.setText("Inicio");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        add(btnSalir);
        btnSalir.setBounds(670, 430, 150, 31);

        cantidad.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        cantidad.setForeground(new java.awt.Color(0, 0, 0));
        cantidad.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cantidad.setText("Plato N° 1");
        add(cantidad);
        cantidad.setBounds(500, 20, 240, 32);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Nombre del plato");
        add(jLabel4);
        jLabel4.setBounds(460, 70, 150, 25);

        precioDelPlato.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        precioDelPlato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                precioDelPlatoActionPerformed(evt);
            }
        });
        precioDelPlato.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                precioDelPlatoKeyTyped(evt);
            }
        });
        add(precioDelPlato);
        precioDelPlato.setBounds(610, 100, 210, 40);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Ingrdientes del plato");
        add(jLabel5);
        jLabel5.setBounds(430, 140, 450, 25);

        btnReiniciarYNoguardar.setBackground(new java.awt.Color(154, 247, 72));
        btnReiniciarYNoguardar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnReiniciarYNoguardar.setForeground(new java.awt.Color(0, 0, 0));
        btnReiniciarYNoguardar.setText("Reiniciar y no guardar");
        btnReiniciarYNoguardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReiniciarYNoguardarActionPerformed(evt);
            }
        });
        add(btnReiniciarYNoguardar);
        btnReiniciarYNoguardar.setBounds(60, 430, 210, 31);

        btnAnadirPlatoAlmenu.setBackground(new java.awt.Color(154, 255, 32));
        btnAnadirPlatoAlmenu.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnAnadirPlatoAlmenu.setForeground(new java.awt.Color(0, 0, 0));
        btnAnadirPlatoAlmenu.setText("Añadir plato");
        btnAnadirPlatoAlmenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnadirPlatoAlmenuActionPerformed(evt);
            }
        });
        add(btnAnadirPlatoAlmenu);
        btnAnadirPlatoAlmenu.setBounds(60, 350, 150, 31);

        jLabel6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Total precio del menu:");
        add(jLabel6);
        jLabel6.setBounds(460, 380, 190, 30);

        totalPrecioMenu.setEditable(false);
        totalPrecioMenu.setBackground(new java.awt.Color(255, 252, 131));
        totalPrecioMenu.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        add(totalPrecioMenu);
        totalPrecioMenu.setBounds(650, 370, 190, 50);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Numero del Menu");
        add(jLabel7);
        jLabel7.setBounds(60, 70, 150, 25);

        numerodeMenu.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        numerodeMenu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                numerodeMenuKeyTyped(evt);
            }
        });
        add(numerodeMenu);
        numerodeMenu.setBounds(210, 60, 140, 40);

        btnFinalizar.setBackground(new java.awt.Color(255, 153, 0));
        btnFinalizar.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnFinalizar.setForeground(new java.awt.Color(0, 0, 0));
        btnFinalizar.setText("Finalizar");
        btnFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizarActionPerformed(evt);
            }
        });
        add(btnFinalizar);
        btnFinalizar.setBounds(380, 430, 160, 30);

        ingredientes.setColumns(20);
        ingredientes.setRows(5);
        ingredientes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ingredientesKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(ingredientes);

        add(jScrollPane1);
        jScrollPane1.setBounds(460, 170, 360, 180);
    }// </editor-fold>//GEN-END:initComponents

    private void camNombrePlatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_camNombrePlatoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_camNombrePlatoActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        Icon icono = new ImageIcon(getClass().getResource("/imgjpanel/escoger.png"));
        int confir = JOptionPane.showConfirmDialog(null, "Los datos no guardados se perderan y"
                + "\n no seran recuperables\n",
                "Confirme", JOptionPane.YES_NO_OPTION, JOptionPane.DEFAULT_OPTION, icono);
        if (confir == JOptionPane.YES_OPTION) {
            removeAll();
            updateUI();
            setLayout(null);
            base.finalizarConexion();
            menu m = new menu();
            m.setBounds(0, 0, 1000, 525);
            add(m.intconponente());
        }
    }//GEN-LAST:event_btnSalirActionPerformed

    private void camNombrePlatoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_camNombrePlatoKeyTyped
        char c = evt.getKeyChar();
        if (c == '!' || c == '¡') {
            evt.consume();
        }
        if (camNombrePlato.getText().length() == 0 && c == ' ') {
            evt.consume();
        }
        if (camNombrePlato.getText().endsWith(" ")) {// el ultimo caracter es un espacio
            if (c == ' ') {
                evt.consume();
            }
        }
    }//GEN-LAST:event_camNombrePlatoKeyTyped

    private void precioDelPlatoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_precioDelPlatoKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c) && c != '.') {
            evt.consume();
        }

        if (precioDelPlato.getText().contains(".") || precioDelPlato.getText().length() == 0) {
            if (c == '.') {
                evt.consume();
            }
        }
    }//GEN-LAST:event_precioDelPlatoKeyTyped

    private void numerodeMenuKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numerodeMenuKeyTyped
       char c = evt.getKeyChar();
       if(!Character.isDigit(c)){
        evt.consume();
       }
    }//GEN-LAST:event_numerodeMenuKeyTyped

    private void extablecerCantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_extablecerCantidadActionPerformed
        int num =(Integer)cantidadDePlatos.getValue();
        SpinnerNumberModel modeloDeSpiner = new SpinnerNumberModel();
        modeloDeSpiner.setMaximum(num);
        modeloDeSpiner.setMinimum(num);
        modeloDeSpiner.setValue(num);
        cantidadDePlatos.setModel(modeloDeSpiner);
        cantidadDePlatos.setEditor(new JSpinner.DefaultEditor(cantidadDePlatos));
        
        numerodeMenu.setEditable(true);
        camNombrePlato.setEditable(true);
        ingredientes.setEditable(true);
        precioDelPlato.setEditable(true);
    }//GEN-LAST:event_extablecerCantidadActionPerformed

    private void btnReiniciarYNoguardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReiniciarYNoguardarActionPerformed
        Icon icono = new ImageIcon(getClass().getResource("/imgjpanel/escoger.png"));
        int confir = JOptionPane.showConfirmDialog(null, "Los datos no guardados se perderan y"
                + "\n no seran recuperables\n",
                "Confirme", JOptionPane.YES_NO_OPTION, JOptionPane.DEFAULT_OPTION, icono);
        if (confir == JOptionPane.YES_OPTION) {
            removeAll();
            updateUI();
            base.finalizarConexion();
            AñadirMenu me = new AñadirMenu();
            me.setLayout(null);
            add(me.iten());
        }
    }//GEN-LAST:event_btnReiniciarYNoguardarActionPerformed

    private void btnAnadirPlatoAlmenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnadirPlatoAlmenuActionPerformed
        Icon icono = new ImageIcon(getClass().getResource("/imgjpanel/escoger.png"));
        int confir = JOptionPane.showConfirmDialog(null, "Confirme su desición\n"
                + "\n"
                + "¡no debe aver campos vacios!",
                "Confirme", JOptionPane.YES_NO_OPTION, JOptionPane.DEFAULT_OPTION, icono);
        if (confir == JOptionPane.YES_OPTION) {
            
           if(camNombrePlato.getText().equals("") || ingredientes.getText().equals("")
             || precioDelPlato.getText().equals("")){
               JOptionPane.showMessageDialog(null, "No deje campo sin rellenar \n"
                    + "si el dato no existe digite Inexistente ", "Aviso", JOptionPane.WARNING_MESSAGE);
           }else{
                
               if(bueltas <  (Integer)cantidadDePlatos.getValue()){
                   if (nomdeplatos == null) {
                       nomdeplatos = camNombrePlato.getText();
                       preciosdelosPlatos = precioDelPlato.getText();
                       ingredi = ingredientes.getText();
                   } else {
                       nomdeplatos += "¡" + camNombrePlato.getText();
                       preciosdelosPlatos += "¡" + precioDelPlato.getText();
                       ingredi += "¡" + ingredientes.getText();
                   }    
                   
                   total += Float.parseFloat(precioDelPlato.getText());
                          
                   totalPrecioMenu.setText(String.valueOf(total));
                   
                   camNombrePlato.setText("");
                   ingredientes.setText("");
                   precioDelPlato.setText("");
                   bueltas++;
                   
                   cantidad.setText("Plato N° "+(bueltas));/*
                   System.out.println("platos: "+nomdeplatos);
                   System.out.println("costo de los platos: "+preciosdelosPlatos);
                   System.out.println("ingredientes: "+ingredi);*/
               }else{
                    JOptionPane.showMessageDialog(null,"Has alcansado el maximo de platos a añadir\n\n"
                            + "El plato que has digitado no se añadira a los otros" , "Aviso", JOptionPane.WARNING_MESSAGE);
                    camNombrePlato.setEditable(false);
                    ingredientes.setEditable(false);
                    precioDelPlato.setEditable(false);
               }
               if(bueltas ==  (Integer)cantidadDePlatos.getValue()){
                    JOptionPane.showMessageDialog(null,"Has alcansado el maximo de platos de este menu\n"
                     , "Aviso", JOptionPane.WARNING_MESSAGE);
                   btnFinalizar.setVisible(true);
                   btnAnadirPlatoAlmenu.setVisible(false);
               }
                
           }
        }
    }//GEN-LAST:event_btnAnadirPlatoAlmenuActionPerformed

    private void precioDelPlatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_precioDelPlatoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_precioDelPlatoActionPerformed

    private void btnFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizarActionPerformed
       if(!numerodeMenu.getText().equals("")){
          
               Icon icono = new ImageIcon(getClass().getResource("/imgjpanel/escoger.png"));
               int confir = JOptionPane.showConfirmDialog(null, "Confirme su desición\n"
                       + "\n"
                       + "",
                       "Confirme", JOptionPane.YES_NO_OPTION, JOptionPane.DEFAULT_OPTION, icono);
               if (confir == JOptionPane.YES_OPTION) {
                   Menu menu = new Menu(numerodeMenu.getText(), nomdeplatos, totalPrecioMenu.getText(),
                           preciosdelosPlatos, ingredi);

                   if(base.addMenu(menu)==true){
                    removeAll();
                    updateUI();
                    base.finalizarConexion();
                    AñadirMenu me = new AñadirMenu();
                    me.setLayout(null);
                    add(me.iten());   
                   }
               }    

       }else{
           JOptionPane.showMessageDialog(null,"El numero del menu\n no debe estar vacio" , "Aviso", JOptionPane.WARNING_MESSAGE);
       }
    }//GEN-LAST:event_btnFinalizarActionPerformed

    private void ingredientesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingredientesKeyTyped
        char c = evt.getKeyChar();
        if (c == '!' || c == '¡') {
            evt.consume();
        }
        if (ingredientes.getText().length() == 0 && c == ' ') {
            evt.consume();
        }
        if (ingredientes.getText().endsWith(" ")) {// el ultimo caracter es un espacio
            if (c == ' ') {
                evt.consume();
            }
        }
    }//GEN-LAST:event_ingredientesKeyTyped

    public JPanel iten() {
        return this;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnadirPlatoAlmenu;
    private javax.swing.JButton btnFinalizar;
    private javax.swing.JButton btnReiniciarYNoguardar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JTextField camNombrePlato;
    private javax.swing.JLabel cantidad;
    private javax.swing.JSpinner cantidadDePlatos;
    private javax.swing.JButton extablecerCantidad;
    private javax.swing.JLabel indicaPlatos;
    private javax.swing.JTextArea ingredientes;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField numerodeMenu;
    private javax.swing.JTextField precioDelPlato;
    private javax.swing.JTextField totalPrecioMenu;
    // End of variables declaration//GEN-END:variables
}
